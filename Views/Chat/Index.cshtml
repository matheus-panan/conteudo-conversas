@model List<painel_conversas.Models.Chat>

@{
    var contactId = ViewData["ContactId"] as string;
    var isFiltered = !string.IsNullOrEmpty(contactId);
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        @if (isFiltered)
        {
            <span>Conversas do Contato</span>
            <small class="text-muted">(@contactId)</small>
        }
        else
        {
            <span>Todas as Conversas</span>
        }
    </h2>

    <div>
        @if (isFiltered)
        {
            <a href="@Url.Action("Index", "Chat")" class="btn btn-secondary">Ver Todas as Conversas</a>
        }
        <a href="@Url.Action("Index", "Contacts")" class="btn btn-outline-primary">Voltar aos Contatos</a>
    </div>
</div>

@if (Model != null && Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
            <tr>
                <th>Data/Hora</th>
                <th>Remetente</th>
                <th>Texto</th>
                <th>Tipo</th>
                <th>Origem</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var chat in Model)
            {
                <tr>
                    <td>
                        <div class="fw-bold">
                            @DateTimeOffset.FromUnixTimeMilliseconds(chat.CreatedAt).LocalDateTime.ToString("dd/MM/yyyy")
                        </div>
                        <small class="text-muted">
                            @DateTimeOffset.FromUnixTimeMilliseconds(chat.CreatedAt).LocalDateTime.ToString("HH:mm:ss")
                        </small>
                    </td>
                    <td>
                        <span class="badge bg-info">@chat.SenderId</span>
                    </td>
                    <td>
                        <div class="message-text">
                            @if (!string.IsNullOrEmpty(chat.Text))
                            {
                                <span>@chat.Text</span>
                            }
                            else
                            {
                                <em class="text-muted">Sem texto</em>
                            }
                        </div>
                    </td>
                    <td>
                        <span class="badge @(chat.Type == "incoming" ? "bg-success" : "bg-primary")">
                            @chat.Type
                        </span>
                    </td>
                    <td>@chat.Origin</td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="mt-3">
        <p class="text-muted">
            Total de mensagens: @Model.Count
            @if (isFiltered)
            {
                <span> | Contato: @contactId</span>
            }
        </p>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading">
            @if (isFiltered)
            {
                <span>Nenhuma conversa encontrada para este contato</span>
            }
            else
            {
                <span>Nenhuma conversa encontrada</span>
            }
        </h4>
        <p>
            @if (isFiltered)
            {
                <span>O contato <strong>@contactId</strong> ainda não possui conversas registradas.</span>
            }
            else
            {
                <span>Não há conversas disponíveis no momento. Verifique se:</span>
            <ul class="mb-0 mt-2">
                <li>Existem contatos cadastrados no sistema</li>
                <li>Os contatos possuem mensagens</li>
                <li>A API está respondendo corretamente</li>
            </ul>
        }
        </p>

        <hr>
        <div class="mb-0">
            <a href="@Url.Action("Index", "Contacts")" class="btn btn-primary">Ver Lista de Contatos</a>
            @if (isFiltered)
            {
                <a href="@Url.Action("Index", "Chat")" class="btn btn-outline-secondary ms-2">Ver Todas as Conversas</a>
            }
        </div>
    </div>
}

<style>
    .table {
        margin-top: 20px;
    }

    .table th {
        background-color: #343a40;
        color: white;
        border-color: #454d55;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .message-text {
        max-width: 300px;
        word-wrap: break-word;
    }

    .badge {
        font-size: 0.75em;
    }

    .table-responsive {
        border-radius: 0.375rem;
        overflow: hidden;
    }

    .alert {
        border-radius: 0.375rem;
    }
</style>